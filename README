PyMark is flexible and fast a markup langauge implementation which piggybacks off python's native types.

PyMark is aimed at solutions that require a large number and variety of human made objects.
There are plenty of situations where this might be the case, one example being game dev, which often requires many human designed and made objects for materials, weapons, characters, scene props, etc.
____________________________________________________

Marked up data compiles to binary, which can be read fast and effectively.
This means syntax is checked before the program (which may be slow to load) is run.
In the "Classes" folder are various implentations of readers in different programming languages.

PyMark supports the following native types:

	+ Lists
	+ Dictionaries
	+ Tuples
	+ Strings
	+ Ints
	+ Floats
	+ Null

And through various interpriter tricks can also do:

	- Constants
	- Flags
	- References
	

Of course the support of these types is also somewhat based on the specifics of the language you're reading them with.	

____________________________________________________


PyMark is *not*:

	~ Really a markup language ~
	
		At least not like XML. It's more of a easy way of building objects which can be parsed quickly and easily by an external program
		
	~ Meant to be machine written ~
	
		Again, unlike XML, PyMark is meant to be written by humans - and it is designed with that in mind.
		It isn't meant to be read directly by machine either. That's what the binary compilation is for.
		Errors are checked for at compile time, meaning the machine readable version of the data *should* work. People who have tried to parse human written XML should appreciate this.
		
	~ Strict ~
	
		PyMark recognizes that humans make mistakes - in particular when entering a lot of data. Because of this, errors wont break the whole system.
		There is no static typing - it wouldn't help much anyway as data produced is meant to be loaded at run time rather than compile time.
		There are many, many different ways in which you can stucture your data. PyMark doesn't force you to use one way or the other. You can enter the data how best suites you.
		
		
____________________________________________________

Copyright 2010 Daniel Holden, all rights reserved.

I haven't decided on a licence yet.

Daniel Holden
contact@theorangeduck.com